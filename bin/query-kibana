#!/usr/bin/env ruby
gem 'excon'
require 'excon'
require 'json'

if ARGV.empty?
  puts <<-HELP
This is an example of a query that you might execute against Kibana, to find all logs
that contain the string "Refusing to cancel"

You should probably execute this script piping the output to jq, like so:

  $ ruby query.rb /path/to/query.json | jq '.[0]'

{
  "_source": {
    "includes": [
      "message",
      "@timestamp"
    ]
  },
  "query": {
    "bool": {
      "must": [
        {
          "query_string": {
            "query": "\"Refusing to cancel\"",
            "analyze_wildcard": false
          }
        },
        {
          "range": {
            "@timestamp": {
              "gte": 1496295163558,
              "lte": 1502291186892,
              "format": "epoch_millis"
            }
          }
        }
      ],
      "must_not": []
    }
  }
}
  HELP
  exit
end

def paginate(kibana, query, per_page: 5000)
  response = kibana.get(
    path: '_search',
    query: { 'size' => 10_000, 'scroll' => '1m' },
    body: query.to_json
  )

  results = []

  loop do
    STDERR.puts('Requesting next page of results...')
    body = JSON.parse(response.body)
    hits = body['hits']['hits']

    break if hits.empty?

    results.concat(hits)
    response = kibana.post(path: '_search/scroll', body: {
      'scroll' => '1m',
      'scroll_id' => body['_scroll_id'],
    }.to_json)
  end

  results
end

query_file = ARGV.first || './query.json'
query = JSON.parse(File.read(query_file))

kibana = Excon.new(ENV.fetch('ELASTICSEARCH_HOST', 'http://localhost:9200'), {
  headers: { 'Accept' => 'application/json', 'Content-Type' => 'application/json' },
  read_timeout: 360,
})

STDERR.puts("Executing query...")
puts JSON.pretty_generate(paginate(kibana, query))
STDERR.puts("done!")
